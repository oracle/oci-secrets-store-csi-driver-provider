name: Release

on:
  push:
    # Build and publish artifacts for a release
    tags:
      - "v*.*.*"

jobs:
  build:
    uses: ./.github/workflows/build-n-push.yaml
    with: 
      IMAGE_REGISTRY: ${{ vars.IMAGE_REGISTRY }}
    secrets: inherit
  image-publish:
    runs-on: ubuntu-latest
    needs: ["build"]
    env:
      IMAGE_PATH : ${{ needs.build.outputs.IMAGE_PATH }}
    steps:

      # - name: Checkout
      #   uses: actions/checkout@v3.3.0

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      #   with:
      #     platforms: amd64  

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${GITHUB_ACTOR,,} --password-stdin

      - name: tag Image with release name
        id: tag-image-with-release-name
        run: |
          echo IMAGE_NEW_PATH=`echo "${{ env.IMAGE_PATH }}" | sed -e "s/:.*$/${{ github.ref_name }}"` >> $GITHUB_OUTPUT
          
      - name: tag Image with release name
        run: |
          # echo ${{ steps.tag-image-with-release-name.outputs.IMAGE_NEW_PATH}}
          docker tag ${{ env.IMAGE_PATH }} ${{ steps.tag-image-with-release-name.outputs.IMAGE_NEW_PATH}}
          docker push ${{ steps.tag-image-with-release-name.outputs.IMAGE_NEW_PATH}}

      - name: Helm package
        run: helm package charts/oci-secrets-store-csi-driver-provider -d charts

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts/oci-secrets-store-csi-driver-provider
          skip_packaging: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"